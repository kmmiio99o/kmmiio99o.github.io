{
  "version": 3,
  "sources": ["../../../src/api/lanyard.js", "../../../src/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-dSfzEe/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-dSfzEe/middleware-loader.entry.ts"],
  "sourceRoot": "/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/.wrangler/tmp/dev-fx2hwv",
  "sourcesContent": ["export async function handleLanyardAPI(request) {\n  try {\n    console.log(\"Fetching from Lanyard API...\");\n\n    const response = await fetch(\n      \"https://api.lanyard.rest/v1/users/879393496627306587\",\n      {\n        headers: {\n          \"User-Agent\": \"kmmiio99o-portfolio/1.0.0\",\n        },\n      },\n    );\n\n    if (!response.ok) {\n      throw new Error(`Lanyard API returned ${response.status}`);\n    }\n\n    const data = await response.json();\n    console.log(\"Lanyard response:\", data);\n\n    // Transform the data to include avatar URL\n    if (data.success && data.data && data.data.discord_user) {\n      const user = data.data.discord_user;\n      if (user.avatar) {\n        data.data.discord_user.avatar_url = `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png?size=128`;\n      }\n    }\n\n    return new Response(JSON.stringify(data), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET\",\n        \"Cache-Control\": \"public, max-age=30\",\n      },\n    });\n  } catch (error) {\n    console.error(\"Lanyard API error:\", error);\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error.message,\n        fallback: {\n          username: \"kmmiio99o\",\n          status: \"offline\",\n          custom_status: null,\n          activities: [],\n        },\n      }),\n      {\n        status: 500,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      },\n    );\n  }\n}\n\nexport function generateDiscordHTML(data) {\n  if (!data || !data.success || !data.data) {\n    return `\n      <div class=\"discord-section\">\n        <div class=\"discord-unavailable\">\n          <span>\u26A0\uFE0F Discord status unavailable</span>\n        </div>\n      </div>\n    `;\n  }\n\n  const userData = data.data;\n  const user = userData.discord_user;\n  const activities = userData.activities || [];\n  const status = userData.discord_status || \"offline\";\n\n  // Generate badges\n  let badgesHTML = \"\";\n  if (user && user.public_flags) {\n    const badges = [];\n    const flags = user.public_flags;\n\n    // Discord badges based on public flags\n    // HypeSquad Bravery (example, you can add more if you want)\n    if (flags & 64)\n      badges.push({\n        name: \"HypeSquad Bravery\",\n        url: \"https://cdn.discordapp.com/badge-icons/8a88d63823d8a71cd5e390baa45efa02.png\",\n      });\n    // Active Developer\n    if (flags & 4194304)\n      badges.push({\n        name: \"Active Developer\",\n        url: \"https://cdn.discordapp.com/badge-icons/6bdc42827a38498929a4920da12695d9.png\",\n      });\n    // Custom badge (always show, or add your own logic)\n    badges.push({\n      name: \"Custom Badge\",\n      url: \"https://gb.obamabot.me/04b5f1aeb78dee22295d532d8030d53c104bf8e1.png\",\n    });\n\n    if (badges.length > 0) {\n      badgesHTML = `\n        <div class=\"discord-badges\">\n          ${badges\n            .map(\n              (badge) => `\n            <div class=\"discord-badge${badge.name === \"Custom Badge\" ? \" custom-badge\" : \"\"}\" title=\"${badge.name}\">\n              <img src=\"${badge.url}\" alt=\"${badge.name}\" style=\"${badge.name === \"Custom Badge\" ? \"width:28px;height:28px;\" : \"width:36px;height:36px;\"}display:block;\" />\n            </div>\n          `,\n            )\n            .join(\"\")}\n        </div>\n      `;\n    }\n  }\n\n  // Custom status for cloud bubble\n  const customActivity = activities.find((activity) => activity.type === 4);\n  let customStatusText = \"\";\n\n  if (customActivity && customActivity.state) {\n    customStatusText = customActivity.state;\n  }\n\n  // Activities with Discord styling\n  const otherActivities = activities.filter((activity) => activity.type !== 4);\n  let activitiesHTML = \"\";\n\n  otherActivities.forEach((activity) => {\n    let activityIcon = \"\";\n    if (activity.assets && activity.assets.large_image) {\n      if (activity.assets.large_image.startsWith(\"mp:external/\")) {\n        const imageUrl = activity.assets.large_image\n          .replace(\"mp:external/\", \"https://media.discordapp.net/external/\")\n          .replace(/\\\\/g, \"/\");\n        activityIcon = `<img src=\"${imageUrl}\" alt=\"${activity.name}\" class=\"activity-large-image\">`;\n      } else {\n        const imageUrl = `https://cdn.discordapp.com/app-assets/${activity.application_id}/${activity.assets.large_image}.png`;\n        activityIcon = `<img src=\"${imageUrl}\" alt=\"${activity.name}\" class=\"activity-large-image\">`;\n      }\n    }\n\n    let smallIcon = \"\";\n    if (activity.assets && activity.assets.small_image) {\n      if (activity.assets.small_image.startsWith(\"mp:external/\")) {\n        const imageUrl = activity.assets.small_image\n          .replace(\"mp:external/\", \"https://media.discordapp.net/external/\")\n          .replace(/\\\\/g, \"/\");\n        smallIcon = `<img src=\"${imageUrl}\" alt=\"${activity.assets.small_text || \"\"}\" class=\"activity-small-image\">`;\n      } else {\n        const imageUrl = `https://cdn.discordapp.com/app-assets/${activity.application_id}/${activity.assets.small_image}.png`;\n        smallIcon = `<img src=\"${imageUrl}\" alt=\"${activity.assets.small_text || \"\"}\" class=\"activity-small-image\">`;\n      }\n    }\n\n    let activityType = \"\";\n    let activityColor = \"\";\n    switch (activity.type) {\n      case 0:\n        activityType = \"Playing\";\n        activityColor = \"#5865f2\";\n        break;\n      case 1:\n        activityType = \"Streaming\";\n        activityColor = \"#593695\";\n        break;\n      case 2:\n        activityType = \"Listening to\";\n        activityColor = \"#1db954\";\n        break;\n      case 3:\n        activityType = \"Watching\";\n        activityColor = \"#f47b67\";\n        break;\n      case 5:\n        activityType = \"Competing in\";\n        activityColor = \"#faa61a\";\n        break;\n      default:\n        activityType = \"Playing\";\n        activityColor = \"#5865f2\";\n        break;\n    }\n\n    let timeInfo = \"\";\n    if (activity.timestamps) {\n      const now = Date.now();\n      if (activity.timestamps.start) {\n        const elapsed = now - activity.timestamps.start;\n        const totalSeconds = Math.floor(elapsed / 1000);\n        const hours = Math.floor(totalSeconds / 3600);\n        const minutes = Math.floor((totalSeconds % 3600) / 60);\n        const seconds = totalSeconds % 60;\n\n        if (hours > 0) {\n          timeInfo = `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")} elapsed`;\n        } else {\n          timeInfo = `${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")} elapsed`;\n        }\n      }\n\n      if (activity.timestamps.end) {\n        const remaining = activity.timestamps.end - now;\n        if (remaining > 0) {\n          const totalSeconds = Math.floor(remaining / 1000);\n          const hours = Math.floor(totalSeconds / 3600);\n          const minutes = Math.floor((totalSeconds % 3600) / 60);\n          const seconds = totalSeconds % 60;\n\n          if (hours > 0) {\n            timeInfo = `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")} left`;\n          } else {\n            timeInfo = `${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")} left`;\n          }\n        }\n      }\n    }\n\n    activitiesHTML += `\n      <div class=\"discord-activity\" style=\"border-left-color: ${activityColor};\">\n        <div class=\"activity-content\">\n          <div class=\"activity-images\">\n            ${activityIcon}\n            ${smallIcon ? `<div class=\"activity-small-container\">${smallIcon}</div>` : \"\"}\n          </div>\n          <div class=\"activity-info\">\n            <div class=\"activity-type\" style=\"color: ${activityColor};\">${activityType}</div>\n            <div class=\"activity-name\">${activity.name}</div>\n            ${activity.details ? `<div class=\"activity-details\">${activity.details}</div>` : \"\"}\n            ${activity.state ? `<div class=\"activity-state\">${activity.state}</div>` : \"\"}\n            ${timeInfo ? `<div class=\"activity-time\">${timeInfo}</div>` : \"\"}\n          </div>\n        </div>\n      </div>\n    `;\n  });\n\n  return `\n    <div class=\"discord-section\">\n      ${badgesHTML}\n      ${activitiesHTML}\n    </div>\n\n    <style>\n      .discord-section {\n        margin: 1.5rem 0;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n      }\n\n      .discord-badges {\n        display: flex;\n        gap: 0.5rem;\n        justify-content: center;\n        flex-wrap: wrap;\n      }\n\n      .discord-badge {\n        width: 44px;\n        height: 44px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: rgba(var(--md-sys-color-surface), 0.8);\n        border-radius: 50%;\n        backdrop-filter: blur(10px);\n        border: 1.5px solid rgba(var(--md-sys-color-on-surface-variant), 0.2);\n        font-size: 12px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        margin: 0 2px;\n        overflow: hidden;\n      }\n\n      .discord-badge:hover {\n        transform: scale(1.1);\n        background: rgba(var(--md-sys-color-surface), 1);\n      }\n\n      .discord-badge img {\n        display: block;\n        object-fit: contain;\n      }\n\n      .discord-badge.custom-badge {\n        width: 44px;\n        height: 44px;\n        padding: 0;\n        background: rgba(var(--md-sys-color-surface), 0.8);\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .discord-badge.custom-badge img {\n        width: 28px !important;\n        height: 28px !important;\n        object-fit: contain;\n      }\n\n\n\n      .discord-activity {\n        background: rgba(var(--md-sys-color-surface), 0.6);\n        backdrop-filter: blur(20px);\n        border: 1px solid rgba(var(--md-sys-color-on-surface-variant), 0.2);\n        border-left: 4px solid #5865f2;\n        border-radius: 12px;\n        padding: 16px;\n        max-width: 400px;\n        margin: 0 auto;\n        transition: all 0.3s ease;\n      }\n\n      .discord-activity:hover {\n        background: rgba(var(--md-sys-color-surface), 0.8);\n        transform: translateY(-2px);\n        box-shadow: 0 8px 32px rgba(var(--md-sys-color-primary), 0.2);\n      }\n\n      .activity-content {\n        display: flex;\n        gap: 12px;\n        align-items: flex-start;\n      }\n\n      .activity-images {\n        position: relative;\n        flex-shrink: 0;\n      }\n\n      .activity-large-image {\n        width: 60px;\n        height: 60px;\n        border-radius: 8px;\n        object-fit: cover;\n      }\n\n      .activity-small-container {\n        position: absolute;\n        bottom: -4px;\n        right: -4px;\n        background: rgb(var(--md-sys-color-surface));\n        border-radius: 50%;\n        padding: 2px;\n        border: 2px solid rgb(var(--md-sys-color-surface));\n      }\n\n      .activity-small-image {\n        width: 20px;\n        height: 20px;\n        border-radius: 50%;\n        object-fit: cover;\n      }\n\n      .activity-info {\n        flex: 1;\n        min-width: 0;\n      }\n\n      .activity-type {\n        font-size: 12px;\n        font-weight: 600;\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n        margin-bottom: 2px;\n      }\n\n      .activity-name {\n        font-size: 16px;\n        font-weight: 600;\n        color: rgb(var(--md-sys-color-on-surface));\n        margin-bottom: 4px;\n        line-height: 1.2;\n      }\n\n      .activity-details {\n        font-size: 14px;\n        color: rgb(var(--md-sys-color-on-surface));\n        margin-bottom: 2px;\n        font-weight: 500;\n      }\n\n      .activity-state {\n        font-size: 14px;\n        color: rgb(var(--md-sys-color-on-surface-variant));\n        margin-bottom: 4px;\n      }\n\n      .activity-time {\n        font-size: 12px;\n        color: rgb(var(--md-sys-color-on-surface-variant));\n        font-weight: 500;\n        margin-top: 6px;\n      }\n\n      .discord-unavailable {\n        text-align: center;\n        color: rgb(var(--md-sys-color-on-surface-variant));\n        font-style: italic;\n        padding: 1rem;\n      }\n\n      @media (max-width: 768px) {\n        .discord-custom-status,\n        .discord-activity {\n          max-width: 100%;\n          margin: 0;\n        }\n\n        .activity-large-image {\n          width: 50px;\n          height: 50px;\n        }\n\n        .activity-small-image {\n          width: 18px;\n          height: 18px;\n        }\n      }\n    </style>\n\n    <script>\n      // Set Discord status indicator\n      const statusElement = document.getElementById('discord-status');\n      if (statusElement) {\n        statusElement.className = \"discord-status status-${status}\";\n      }\n\n      // Set custom status cloud\n      const statusCloud = document.getElementById('status-cloud');\n      const customStatus = \"${customStatusText}\";\n      if (statusCloud && customStatus) {\n        statusCloud.textContent = customStatus;\n        statusCloud.style.display = 'block';\n      }\n    </script>\n  `;\n}\n", "import { handleLanyardAPI, generateDiscordHTML } from \"./api/lanyard.js\";\n\nexport default {\n  async fetch(request, env, ctx) {\n    try {\n      const url = new URL(request.url);\n\n      // Simple routing without itty-router for debugging\n      if (url.pathname === \"/\") {\n        return await handleHomePage();\n      }\n\n      if (url.pathname === \"/api/discord\") {\n        return handleLanyardAPI(request);\n      }\n\n      if (url.pathname.startsWith(\"/themes/\")) {\n        return new Response(\"Theme preview coming soon\", {\n          headers: { \"Content-Type\": \"text/plain\" },\n        });\n      }\n\n      // 404 for everything else\n      return new Response(\"Not Found\", {\n        status: 404,\n        headers: { \"Content-Type\": \"text/plain\" },\n      });\n    } catch (error) {\n      console.error(\"Worker error:\", error);\n      return new Response(`Error: ${error.message}`, {\n        status: 500,\n        headers: { \"Content-Type\": \"text/plain\" },\n      });\n    }\n  },\n};\n\nasync function handleHomePage() {\n  // Fetch Discord data server-side\n  let discordHTML = \"\";\n  let avatarUrl = \"\";\n  let username = \"kmmiio99o\";\n  try {\n    const response = await fetch(\n      \"https://api.lanyard.rest/v1/users/879393496627306587\",\n    );\n    if (response.ok) {\n      const data = await response.json();\n      discordHTML = generateDiscordHTML(data);\n\n      // Extract avatar and username directly\n      if (data.success && data.data && data.data.discord_user) {\n        const user = data.data.discord_user;\n        if (user.avatar && user.id) {\n          avatarUrl = `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png?size=128`;\n        }\n        if (user.username) {\n          username = user.username;\n        }\n      }\n    } else {\n      discordHTML =\n        '<div class=\"status-section\"><div class=\"custom-status\"><span>\u26A0\uFE0F Discord API unavailable</span></div></div>';\n    }\n  } catch (error) {\n    discordHTML =\n      '<div class=\"status-section\"><div class=\"custom-status\"><span>\u274C Could not load Discord status</span></div></div>';\n  }\n  const html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>kmmiio99o - Developer Portfolio</title>\n    <meta name=\"description\" content=\"Personal portfolio website with Material You design\">\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n\n    <style>\n        :root {\n            --md-sys-color-primary: 208, 188, 255;\n            --md-sys-color-on-primary: 55, 30, 115;\n            --md-sys-color-secondary: 204, 194, 220;\n            --md-sys-color-surface: 16, 14, 19;\n            --md-sys-color-on-surface: 230, 225, 229;\n            --md-sys-color-on-surface-variant: 202, 196, 208;\n            --md-sys-color-background: 16, 14, 19;\n            --md-sys-color-on-background: 230, 225, 229;\n            --md-sys-color-error: 255, 180, 171;\n        }\n\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Inter', sans-serif;\n            background: linear-gradient(135deg, rgb(var(--md-sys-color-background)) 0%, rgb(24, 21, 28) 50%, rgb(var(--md-sys-color-background)) 100%);\n            color: rgb(var(--md-sys-color-on-background));\n            line-height: 1.6;\n            min-height: 100vh;\n            position: relative;\n        }\n\n        .bg-decoration {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: radial-gradient(circle at 20% 80%, rgba(var(--md-sys-color-primary), 0.1) 0%, transparent 50%),\n                        radial-gradient(circle at 80% 20%, rgba(var(--md-sys-color-secondary), 0.1) 0%, transparent 50%);\n            z-index: -1;\n            pointer-events: none;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 0 2rem;\n        }\n\n        .hero {\n            text-align: center;\n            padding: 8rem 0 4rem;\n        }\n\n        .avatar-container {\n            position: relative;\n            margin: 0 auto 2rem;\n            width: 120px;\n            height: 120px;\n        }\n\n        .avatar {\n            width: 120px;\n            height: 120px;\n            border-radius: 50%;\n            background: linear-gradient(135deg, rgb(var(--md-sys-color-primary)) 0%, rgb(var(--md-sys-color-secondary)) 100%);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 3rem;\n            font-weight: 700;\n            color: rgb(var(--md-sys-color-on-primary));\n            border: 3px solid rgb(var(--md-sys-color-primary));\n            box-shadow: 0 8px 32px rgba(var(--md-sys-color-primary), 0.3);\n            background-size: cover;\n            background-position: center;\n            position: relative;\n        }\n\n        .discord-status {\n            position: absolute;\n            bottom: 8px;\n            right: 8px;\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            border: 3px solid rgb(var(--md-sys-color-background));\n            z-index: 1;\n        }\n\n        .status-online { background-color: #23a55a; }\n        .status-idle { background-color: #f0b232; }\n        .status-dnd { background-color: #f23f43; }\n        .status-offline { background-color: #80848e; }\n\n        .avatar-status-wrapper {\n            position: relative;\n            display: flex;\n            align-items: flex-end;\n        }\n        .avatar-container {\n            position: relative;\n        }\n        .status-cloud {\n            position: absolute;\n            left: auto;\n            right: 150px;\n            bottom: 100px;\n            background: rgba(var(--md-sys-color-surface), 0.95);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(var(--md-sys-color-on-surface-variant), 0.2);\n            border-radius: 20px;\n            padding: 10px 16px;\n            min-width: 100px;\n            max-width: 340px;\n            color: rgb(var(--md-sys-color-on-surface));\n            font-size: 15px;\n            white-space: pre-line;\n            overflow-wrap: break-word;\n            word-break: break-word;\n            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n            z-index: 2;\n            display: flex;\n            align-items: center;\n            justify-content: flex-start;\n            text-align: left;\n            transition: all 0.2s;\n        }\n        .status-cloud::before {\n            content: '';\n            position: absolute;\n            left: -10px;\n            bottom: 10px;\n            width: 14px;\n            height: 14px;\n            background: rgba(var(--md-sys-color-surface), 0.95);\n            border-radius: 50%;\n            z-index: 1;\n        }\n\n        @media (max-width: 768px) {\n            .avatar-status-wrapper {\n                flex-direction: column;\n                align-items: center;\n            }\n            .avatar-container {\n                width: 100px;\n                height: 100px;\n            }\n            .avatar {\n                width: 100px;\n                height: 100px;\n                font-size: 2.5rem;\n            }\n            .discord-status {\n                width: 20px;\n                height: 20px;\n                bottom: 6px;\n                right: 6px;\n            }\n            .status-cloud {\n                position: static !important;\n                margin: 18px auto 18px auto !important;\n                display: block !important;\n                min-width: 0;\n                max-width: 95vw;\n                width: 100%;\n                text-align: center;\n                font-size: 13px;\n                padding: 10px 12px;\n                border-radius: 16px;\n                box-sizing: border-box;\n                background: rgba(var(--md-sys-color-surface), 0.95);\n                border: 1px solid rgba(var(--md-sys-color-on-surface-variant), 0.2);\n                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n            }\n            .status-cloud::before {\n                display: none !important;\n            }\n        }\n\n        .activity-header {\n            display: flex;\n            align-items: center;\n            gap: 0.5rem;\n            margin-bottom: 0.5rem;\n        }\n\n        .activity-icon {\n            width: 20px;\n            height: 20px;\n            border-radius: 4px;\n        }\n\n        .activity-name {\n            font-weight: 500;\n            color: rgb(var(--md-sys-color-on-surface));\n        }\n\n        .activity-details {\n            font-size: 0.85rem;\n            color: rgb(var(--md-sys-color-on-surface-variant));\n            line-height: 1.4;\n        }\n\n        .loading {\n            opacity: 0.7;\n            animation: pulse 2s infinite;\n        }\n\n        @keyframes pulse {\n            0%, 100% { opacity: 0.7; }\n            50% { opacity: 1; }\n        }\n\n        .gradient-text {\n            background: linear-gradient(135deg, rgb(var(--md-sys-color-primary)) 0%, rgb(var(--md-sys-color-secondary)) 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n        }\n\n        h1 {\n            font-size: clamp(2.5rem, 5vw, 3.5rem);\n            font-weight: 700;\n            margin-bottom: 1rem;\n        }\n\n        .hero-subtitle {\n            font-size: 1.25rem;\n            max-width: 600px;\n            margin: 0 auto 2rem;\n            color: rgb(var(--md-sys-color-on-surface-variant));\n        }\n\n        .social-links {\n            display: flex;\n            gap: 1rem;\n            justify-content: center;\n            margin-bottom: 2rem;\n        }\n\n        .social-btn {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 48px;\n            height: 48px;\n            border-radius: 50%;\n            background: rgba(255, 255, 255, 0.1);\n            color: rgb(var(--md-sys-color-primary));\n            text-decoration: none;\n            transition: all 0.3s ease;\n        }\n\n        .social-btn:hover {\n            background: rgba(var(--md-sys-color-primary), 0.2);\n            transform: translateY(-2px);\n        }\n\n        .btn {\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n            padding: 12px 24px;\n            border-radius: 20px;\n            text-decoration: none;\n            font-weight: 500;\n            transition: all 0.3s ease;\n            border: none;\n            cursor: pointer;\n            font-family: inherit;\n        }\n\n        .btn-primary {\n            background: linear-gradient(135deg, rgb(var(--md-sys-color-primary)) 0%, rgb(var(--md-sys-color-primary)) 100%);\n            color: rgb(var(--md-sys-color-on-primary));\n        }\n\n        .btn-outlined {\n            background: transparent;\n            border: 1px solid rgba(var(--md-sys-color-primary), 0.5);\n            color: rgb(var(--md-sys-color-primary));\n        }\n\n        .btn:hover {\n            transform: translateY(-1px);\n            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n        }\n\n        .hero-actions {\n            display: flex;\n            gap: 1rem;\n            justify-content: center;\n            flex-wrap: wrap;\n        }\n\n        .skills-section {\n            padding: 4rem 0;\n            text-align: center;\n        }\n\n        .section-title {\n            font-size: clamp(2rem, 4vw, 2.5rem);\n            margin-bottom: 3rem;\n        }\n\n        .skills-grid {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 1rem;\n            justify-content: center;\n            max-width: 800px;\n            margin: 0 auto;\n        }\n\n        .chip {\n            display: inline-flex;\n            align-items: center;\n            padding: 8px 16px;\n            border-radius: 16px;\n            background: rgba(var(--md-sys-color-primary), 0.12);\n            color: rgb(var(--md-sys-color-primary));\n            border: 1px solid rgba(var(--md-sys-color-primary), 0.3);\n            font-size: 0.875rem;\n            font-weight: 500;\n            transition: all 0.3s ease;\n        }\n\n        .chip:hover {\n            background: rgba(var(--md-sys-color-primary), 0.2);\n            transform: translateY(-1px);\n        }\n\n        .glass-card {\n            background: rgba(255, 255, 255, 0.05);\n            backdrop-filter: blur(20px);\n            border: 1px solid rgba(255, 255, 255, 0.1);\n            border-radius: 16px;\n            transition: all 0.3s ease;\n        }\n\n        .glass-card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n        }\n\n        .projects-section {\n            padding: 4rem 0;\n        }\n\n        .projects-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 2rem;\n            margin-top: 2rem;\n        }\n\n        .project-card {\n            padding: 1.5rem;\n            text-align: left;\n        }\n\n        .project-card h3 {\n            margin-bottom: 0.5rem;\n            color: rgb(var(--md-sys-color-on-surface));\n        }\n\n        .project-card p {\n            margin-bottom: 1rem;\n            color: rgb(var(--md-sys-color-on-surface-variant));\n        }\n\n        .project-tags {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 0.5rem;\n            margin-top: 1rem;\n        }\n\n        .project-tags .chip {\n            font-size: 0.75rem;\n            padding: 4px 12px;\n        }\n\n        .footer {\n            padding: 3rem 0;\n            text-align: center;\n            border-top: 1px solid rgba(255, 255, 255, 0.1);\n            margin-top: 4rem;\n        }\n\n        @media (max-width: 768px) {\n            .container {\n                padding: 0 1rem;\n            }\n\n            .hero {\n                padding: 4rem 0 2rem;\n            }\n\n            .avatar-container {\n                width: 100px;\n                height: 100px;\n            }\n\n            .avatar {\n                width: 100px;\n                height: 100px;\n                font-size: 2.5rem;\n            }\n\n            .discord-status {\n                width: 20px;\n                height: 20px;\n                bottom: 6px;\n                right: 6px;\n            }\n\n            .hero-actions {\n                flex-direction: column;\n                align-items: center;\n            }\n\n            .projects-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"bg-decoration\"></div>\n\n    <main>\n        <div class=\"container\">\n            <!-- Hero Section -->\n            <section class=\"hero\">\n                <div class=\"avatar-status-wrapper\">\n                    <div class=\"avatar-container\">\n                        <div class=\"avatar\" id=\"user-avatar\" ${avatarUrl ? `style=\"background-image: url(${avatarUrl}); background-size: cover; background-position: center;\"` : \"\"}>\n                            ${avatarUrl ? \"\" : \"K\"}\n                        </div>\n                        <div class=\"discord-status status-offline\" id=\"discord-status\"></div>\n                    </div>\n                    <div class=\"status-cloud\" id=\"status-cloud\" style=\"display: none;\"></div>\n                </div>\n                <h1 class=\"gradient-text\" id=\"username\">${username}</h1>\n\n                ${discordHTML}\n\n                <p class=\"hero-subtitle\">\n                    Creative developer specializing in Discord themes, web development, and Material You design systems\n                </p>\n\n                <div class=\"social-links\">\n                    <a href=\"https://github.com/kmmiio99o\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"social-btn\">\n                        <span class=\"material-icons\">code</span>\n                    </a>\n                    <a href=\"https://discord.gg/your-invite\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"social-btn\">\n                        <span class=\"material-icons\">forum</span>\n                    </a>\n                </div>\n\n                <div class=\"hero-actions\">\n                    <a href=\"#projects\" class=\"btn btn-primary\">\n                        <span class=\"material-icons\">palette</span>\n                        View Projects\n                    </a>\n                    <a href=\"https://github.com/kmmiio99o\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn btn-outlined\">\n                        <span class=\"material-icons\">launch</span>\n                        GitHub\n                    </a>\n                </div>\n            </section>\n\n            <!-- Skills Section -->\n            <section class=\"skills-section\">\n                <h2 class=\"gradient-text section-title\">Skills & Technologies</h2>\n                <div class=\"skills-grid\">\n                    <span class=\"chip\">React</span>\n                    <span class=\"chip\">Next.js</span>\n                    <span class=\"chip\">TypeScript</span>\n                    <span class=\"chip\">Node.js</span>\n                    <span class=\"chip\">Discord.js</span>\n                    <span class=\"chip\">CSS3</span>\n                    <span class=\"chip\">HTML5</span>\n                    <span class=\"chip\">Git</span>\n                    <span class=\"chip\">Cloudflare</span>\n                    <span class=\"chip\">Material You</span>\n                </div>\n            </section>\n\n            <!-- Projects Section -->\n            <section class=\"projects-section\" id=\"projects\">\n                <h2 class=\"gradient-text section-title\">Featured Projects</h2>\n                <div class=\"projects-grid\">\n                    <div class=\"project-card glass-card\">\n                        <h3>Blossom Theme</h3>\n                        <p>A beautiful cherry blossom inspired Discord theme with soft pink gradients and elegant design elements.</p>\n                        <div class=\"project-tags\">\n                            <span class=\"chip\">CSS</span>\n                            <span class=\"chip\">Discord</span>\n                            <span class=\"chip\">Pink</span>\n                        </div>\n                    </div>\n\n                    <div class=\"project-card glass-card\">\n                        <h3>Tenka Theme</h3>\n                        <p>A sleek and modern Discord theme with dark tones and vibrant accent colors.</p>\n                        <div class=\"project-tags\">\n                            <span class=\"chip\">CSS</span>\n                            <span class=\"chip\">Discord</span>\n                            <span class=\"chip\">Dark</span>\n                        </div>\n                    </div>\n\n                    <div class=\"project-card glass-card\">\n                        <h3>Vencord Midnight</h3>\n                        <p>A midnight-themed Discord theme optimized for Vencord with deep blues and subtle animations.</p>\n                        <div class=\"project-tags\">\n                            <span class=\"chip\">CSS</span>\n                            <span class=\"chip\">Vencord</span>\n                            <span class=\"chip\">Blue</span>\n                        </div>\n                    </div>\n\n                    <div class=\"project-card glass-card\">\n                        <h3>Theme Marketplace</h3>\n                        <p>A Material You themed website showcasing Discord themes with beautiful animations and modern design.</p>\n                        <div class=\"project-tags\">\n                            <span class=\"chip\">React</span>\n                            <span class=\"chip\">Material You</span>\n                            <span class=\"chip\">TypeScript</span>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <!-- Footer -->\n            <footer class=\"footer\">\n                <p>Made with <span class=\"material-icons\" style=\"color: rgb(var(--md-sys-color-error)); font-size: inherit;\">favorite</span> using Cloudflare Workers</p>\n                <p>&copy; 2024 kmmiio99o. All rights reserved.</p>\n            </footer>\n        </div>\n    </main>\n\n    <script>\n        // Simple fade-in animation\n        document.addEventListener('DOMContentLoaded', function() {\n            const elements = document.querySelectorAll('.glass-card, .chip');\n            elements.forEach((el, index) => {\n                el.style.opacity = '0';\n                el.style.transform = 'translateY(20px)';\n\n                setTimeout(() => {\n                    el.style.transition = 'all 0.6s ease-out';\n                    el.style.opacity = '1';\n                    el.style.transform = 'translateY(0)';\n                }, index * 100);\n            });\n        });\n    </script>\n</body>\n</html>`;\n\n  return new Response(html, {\n    headers: {\n      \"Content-Type\": \"text/html;charset=UTF-8\",\n      \"Cache-Control\": \"public, max-age=3600\",\n    },\n  });\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/src/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/src/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/.wrangler/tmp/bundle-dSfzEe/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/.wrangler/tmp/bundle-dSfzEe/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/kmmiio99o/Documents/GitHub/kmmiio99o.github.io/.wrangler/tmp/bundle-dSfzEe/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
